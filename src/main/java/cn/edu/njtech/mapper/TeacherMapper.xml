<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.njtech.mapper.TeacherMapper">
  <resultMap id="BaseResultMap" type="cn.edu.njtech.domain.dao.Teacher">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="TINYINT" property="sex" />
    <result column="birthdate" jdbcType="DATE" property="birthdate" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="academy" jdbcType="VARCHAR" property="academy" />
    <result column="position" jdbcType="VARCHAR" property="position" />
    <result column="incumbency" jdbcType="VARCHAR" property="incumbency" />
    <result column="limit" jdbcType="TINYINT" property="limit" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="address" jdbcType="VARCHAR" property="address" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, name, sex, birthdate, status, department, academy, position, incumbency, 
    limit, phone, address
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_teacher
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_teacher
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.edu.njtech.domain.dao.Teacher">
    insert into t_teacher (id, user_id, name, 
      sex, birthdate, status, 
      department, academy, position, 
      incumbency, limit, phone, 
      address)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{sex,jdbcType=TINYINT}, #{birthdate,jdbcType=DATE}, #{status,jdbcType=TINYINT}, 
      #{department,jdbcType=VARCHAR}, #{academy,jdbcType=VARCHAR}, #{position,jdbcType=VARCHAR}, 
      #{incumbency,jdbcType=VARCHAR}, #{limit,jdbcType=TINYINT}, #{phone,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.njtech.domain.dao.Teacher">
    insert into t_teacher
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthdate != null">
        birthdate,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="academy != null">
        academy,
      </if>
      <if test="position != null">
        position,
      </if>
      <if test="incumbency != null">
        incumbency,
      </if>
      <if test="limit != null">
        limit,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="address != null">
        address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="birthdate != null">
        #{birthdate,jdbcType=DATE},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="academy != null">
        #{academy,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="incumbency != null">
        #{incumbency,jdbcType=VARCHAR},
      </if>
      <if test="limit != null">
        #{limit,jdbcType=TINYINT},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.njtech.domain.dao.Teacher">
    update t_teacher
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="birthdate != null">
        birthdate = #{birthdate,jdbcType=DATE},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="academy != null">
        academy = #{academy,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        position = #{position,jdbcType=VARCHAR},
      </if>
      <if test="incumbency != null">
        incumbency = #{incumbency,jdbcType=VARCHAR},
      </if>
      <if test="limit != null">
        limit = #{limit,jdbcType=TINYINT},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.njtech.domain.dao.Teacher">
    update t_teacher
    set user_id = #{userId,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      birthdate = #{birthdate,jdbcType=DATE},
      status = #{status,jdbcType=TINYINT},
      department = #{department,jdbcType=VARCHAR},
      academy = #{academy,jdbcType=VARCHAR},
      position = #{position,jdbcType=VARCHAR},
      incumbency = #{incumbency,jdbcType=VARCHAR},
      limit = #{limit,jdbcType=TINYINT},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>